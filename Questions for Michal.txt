user.routers.js ln 30. 		.then(() => res.status(201).json(User))       // This seems dangerous. yet it is what is discribed for testing purposes. 

SIDELINED - Login with bad data causes crash rather than offering to send to create user screen
FIXED - settings.js doesn't seem to be saving settings data
	user.router.js ln 53 proves data is received by the server. 
	looking at Robo 3T shows us that the data has been updated
	settings.js ln 120 success redirects us back to index.html
	calls protected.js ln 24 shows that settings are not received from the server 
	user.router.js ln 41 returns req.user on a successful get request. 
	This only seems to happen until you log out and relog at which point the app can find your settings
SKIPPED - testing getting a range of shifts returning unauthorized
FIXED - sign up doesn't log you in.
FIXED- change html links to 'index' to home
FIXED- build landing page
FIXED	- loosing background color when float:left is used at larger screen widths
	loosing image behind header
SKIPPED - change singup / login pages to some sort of animated span


FIXED - Graphs page white background
IGNORED - Graphs too large
SKIPPED - API Documentation
NOTABUG - Forms having actions?
FIXED - catching error message

- index.html   " under by $-0.44239999999999924. " Should be limited to 2 decimal places
- graphs.html   display dates in an easy to read way, 
- graphs.html   display data sorted by date
- input paycheck.html   "enter how MUCH taxes were"
- input paycheck.html   on enter does nothing		?????
- input shift   needs confirmation before sending
input shift   should have a way to easly see what days you have already entered. 


Feedback from Morgan Nixon:

Unfortunately, the functionality is not working as planned right now. When I enter in a paycheck, it appears to work fine, but the data doesn't update on the welcome screen. This occurred in multiple browsers I tested.

	Could I have an option that can be set? 
	Take the hourly out of the equation, 
	2nd api call on the welcome screen. 

	build an endpoint that return shifts and paychecks for a given timeframe and display appropriately.

I also think having nAN is too crude and the data need to be converted not to display that, a zero would be better for example.

- The project title should stand out more; if you don't want to go as far as making a simple logo which is always a nice touch, I would at least make it larger and remove the underline.

The font feels small sitewide on a desktop, the font doesn't seem to be responding across different devices and adjusting sitewide. I would highly suggest using a typographic scale to remove the guesswork out of setting font sizes: https://www.vanseodesign.com/blog/wp-content/uploads/2012/08/typographic-scale.png Creating visual hierarchy through font sizes is critical to an effective UX.

- When I'm entering a new paycheck, I can't see the full input placeholder, and I'm unsure what I should enter relating to taxes? This whole form feels too tight and small as far as the form elements themselves.

- A demo login is needed to allow hiring managers to access the project quickly. I would pre-populate this with some example shifts and checks so they can see the app quickly in action.

	endpoint drops data and reseeds db





loads image twice on index page . . .    
